{"id":"js/shader/fragmentLine.glsl","dependencies":[{"name":"C:\\Users\\eminh\\Desktop\\Study\\three\\project\\Icosahedron\\package.json","includedInParent":true,"mtime":1633326103247}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D uLandscape;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec3 eyeVector;\\nvarying vec3 vBary;\\n\\nfloat PI = 3.141592653589793238;\\n\\nvec2 hash22(vec2 p){\\n\\tp = fract(p * vec2(5.3983, 5.4427));\\n\\tp += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\\n\\treturn fract(vec2(p.x * p.y * 95.4337, p.x * p.y * 97.597));\\n}\\n\\nvoid main()\\t{\\n\\n\\tfloat width = 2.;\\n\\tvec3 d = fwidth(vBary);\\n\\tvec3 s = smoothstep(d*(width + 0.5), d*(width - 0.5), vBary);\\n\\tfloat line = max(s.x, max(s.y, s.z));\\n\\tif(line < 0.1) discard;\\n\\tgl_FragColor = vec4(mix(vec3(1.), vec3(0.), 1. - line), 1.);\\n\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"js/shader/fragmentLine.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"js/shader/fragmentLine.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"js/shader/fragmentLine.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"js/shader/fragmentLine.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"js/shader/fragmentLine.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":739},"source":"js/shader/fragmentLine.glsl","original":{"line":1,"column":0}}],"sources":{"js/shader/fragmentLine.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float progress;\\nuniform sampler2D uLandscape;\\nuniform vec4 resolution;\\nvarying vec2 vUv;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec3 eyeVector;\\nvarying vec3 vBary;\\n\\nfloat PI = 3.141592653589793238;\\n\\nvec2 hash22(vec2 p){\\n\\tp = fract(p * vec2(5.3983, 5.4427));\\n\\tp += dot(p.yx, p.xy + vec2(21.5351, 14.3137));\\n\\treturn fract(vec2(p.x * p.y * 95.4337, p.x * p.y * 97.597));\\n}\\n\\nvoid main()\\t{\\n\\n\\tfloat width = 2.;\\n\\tvec3 d = fwidth(vBary);\\n\\tvec3 s = smoothstep(d*(width + 0.5), d*(width - 0.5), vBary);\\n\\tfloat line = max(s.x, max(s.y, s.z));\\n\\tif(line < 0.1) discard;\\n\\tgl_FragColor = vec4(mix(vec3(1.), vec3(0.), 1. - line), 1.);\\n\\n}\";"},"lineCount":null}},"error":null,"hash":"57ac0f011ed867d3e04365f72b1feafb","cacheData":{"env":{}}}